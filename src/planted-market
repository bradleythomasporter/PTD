import React, { useState } from 'react';
import './App.css';

const Header = ({ onShowSignup }) => (
  <header className="header">
    <div className="header-content">
      <a href="/" className="logo">Planted ðŸŒ±</a>
      <nav className="nav">
        <a href="/shop" className="nav-link">Shop</a>
        <a href="/about" className="nav-link">About</a>
        <a href="/login" className="nav-link">Login</a>
        <button onClick={onShowSignup} className="signup-button">Join as Grower</button>
      </nav>
    </div>
  </header>
);

const Hero = () => (
  <div className="hero">
    <h1 className="hero-title">Discover Local Plants</h1>
    <p>Buy local plants from local growers! </p>
    <button className="button">Insert Zip Code!!</button>
  </div>
);

const PlantCard = ({ plant, onViewDetails }) => (
  <div className="plant-card">
    <img src={plant.image} alt={plant.name} className="plant-image" />
    <h3>{plant.name}</h3>
    <p>${plant.price}</p>
    <button onClick={() => onViewDetails(plant)} className="button">View Details</button>
  </div>
);

const FeaturedPlants = ({ onViewDetails }) => {
  const plants = [
    { id: 1, name: "Monstera Deliciosa", price: "29.99", image: "https://images.unsplash.com/photo-1614594975525-e45190c55d0b?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80", description: "The Monstera Deliciosa, also known as the Swiss Cheese Plant, is famous for its quirky natural leaf holes. These tropical plants are easy to care for and can dramatically improve any interior setting." },
    { id: 2, name: "Fiddle Leaf Fig", price: "49.99", image: "https://images.unsplash.com/photo-1608031236933-9967fcec7098?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80", description: "Fiddle Leaf Fig trees are the 'it' plants of the design world. Their large, glossy leaves make a striking statement in any room. While they require a bit more care, their visual impact is unmatched." },
    { id: 3, name: "Snake Plant", price: "19.99", image: "https://images.unsplash.com/photo-1572688484438-313a6e50c333?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80", description: "The Snake Plant, or Mother-in-Law's Tongue, is one of the most tolerant houseplants you can find. They're perfect for beginners, as they can survive low light levels and irregular watering." }
  ];

  return (
    <section className="featured-section">
      <h2 className="section-title">Featured Plants</h2>
      <div className="plant-grid">
        {plants.map(plant => (
          <PlantCard key={plant.id} plant={plant} onViewDetails={onViewDetails} />
        ))}
      </div>
    </section>
  );
};

const Footer = () => (
  <footer className="footer">
    <p>&copy; 2024 Planted. Connecting plant lovers with local growers.</p>
  </footer>
);

const GardenerModal = ({ onClose, plant }) => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    address: '',
    date: ''
  });

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log('Gardener request data:', { ...formData, plant: plant.name });
    onClose();
  };

  return (
    <div className="modal">
      <div className="modal-content">
        <h2>Request a Gardener for {plant.name}</h2>
        <form onSubmit={handleSubmit}>
          <input
            type="text"
            name="name"
            value={formData.name}
            onChange={handleChange}
            placeholder="Your Name"
            required
            className="input"
          />
          <input
            type="email"
            name="email"
            value={formData.email}
            onChange={handleChange}
            placeholder="Your Email"
            required
            className="input"
          />
          <input
            type="text"
            name="address"
            value={formData.address}
            onChange={handleChange}
            placeholder="Planting Address"
            required
            className="input"
          />
          <input
            type="date"
            name="date"
            value={formData.date}
            onChange={handleChange}
            required
            className="input"
          />
          <div>
            <button type="button" onClick={onClose} className="close-button">Cancel</button>
            <button type="submit" className="button">Submit Request</button>
          </div>
        </form>
      </div>
    </div>
  );
};

const ProductPage = ({ plant, onGoBack }) => {
  const [showGardenerModal, setShowGardenerModal] = useState(false);

  return (
    <div className="product-page">
      <img src={plant.image} alt={plant.name} className="product-image" />
      <h1 className="product-title">{plant.name}</h1>
      <p className="product-price">${plant.price}</p>
      <p className="product-description">{plant.description}</p>
      <div className="gardener-info">
        <h3>Need help planting?</h3>
        <p>Our Planted-approved gardeners can help you get your new plant settled in its new home.</p>
        <button onClick={() => setShowGardenerModal(true)} className="gardener-button">Plant for Me</button>
      </div>
      <button onClick={onGoBack} className="back-button">Back to Plants</button>
      <button className="button">Add to Cart</button>
      {showGardenerModal && <GardenerModal onClose={() => setShowGardenerModal(false)} plant={plant} />}
    </div>
  );
};

export default function App() {
  const [currentPage, setCurrentPage] = useState('home');
  const [selectedPlant, setSelectedPlant] = useState(null);

  const handleViewDetails = (plant) => {
    setSelectedPlant(plant);
    setCurrentPage('product');
  };

  const handleGoBack = () => {
    setCurrentPage('home');
    setSelectedPlant(null);
  };

  return (
    <div className="page">
      <Header onShowSignup={() => console.log('Show signup modal')} />
      {currentPage === 'home' ? (
        <>
          <Hero />
          <FeaturedPlants onViewDetails={handleViewDetails} />
        </>
      ) : (
        <ProductPage plant={selectedPlant} onGoBack={handleGoBack} />
      )}
      <Footer />
    </div>
  );
}